# # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

name: Java CI with Maven

on:
  pull_request:
    types: ["opened","reopened", "synchronize"]
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: List directory contents
      run: ls -R
    - name: Build with Maven
      run: mvn -B package --file ./webapp/pom.xml
    - name: Check if compilation was successful
      run: mvn compile

  merge-check:
    name: Merge Check
    needs: build
    runs-on: ubuntu-latest

  # steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Git
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.x'
  #       submodules: 'true'
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Install Git
    #   run: sudo apt-get install git -y

    # - name: Fetch branches
    #   run: git fetch origin +refs/heads/main:refs/remotes/origin/main

    # - name: Check if feature branch is up to date with main
    #   run: git merge-base --is-ancestor origin/main HEAD

    # - name: Merge only if checks are successful
    #   if: success()
    #   run: echo "All checks passed. You can now merge the pull request."

      
